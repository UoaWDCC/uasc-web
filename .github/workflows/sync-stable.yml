name: Update Stable Branch via PR

on:
  workflow_dispatch:

jobs:
  create-and-approve-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Check for merge conflicts
        id: check-conflicts
        run: |
          git checkout stable || git checkout -b stable
          # Try to merge master into stable locally to check for conflicts
          if git merge --no-commit --no-ff origin/master; then
            # No conflicts
            git merge --abort  # We'll do the actual merge via PR
            echo "has_conflicts=false" >> $GITHUB_OUTPUT
          else
            # Conflicts detected
            git merge --abort
            echo "has_conflicts=true" >> $GITHUB_OUTPUT
          fi

      - name: Handle no conflicts - Create PR
        if: steps.check-conflicts.outputs.has_conflicts == 'false'
        id: create-pr
        run: |
          BRANCH_NAME="update-stable-from-master-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME origin/master
          git push origin $BRANCH_NAME
          
          # Create PR using GitHub CLI
          PR_URL=$(gh pr create --base stable --head $BRANCH_NAME --title "Update stable branch from master" --body "This PR updates the stable branch to match the current state of master. Automatically generated by GitHub Actions.")
          PR_NUMBER=$(echo $PR_URL | grep -o '[0-9]\+$')
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve and merge PR
        if: steps.check-conflicts.outputs.has_conflicts == 'false' && steps.create-pr.outputs.pr_number
        run: |
          gh pr review ${{ steps.create-pr.outputs.pr_number }} --approve
          gh pr merge ${{ steps.create-pr.outputs.pr_number }} --merge --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle conflicts - Create force update branch
        if: steps.check-conflicts.outputs.has_conflicts == 'true'
        run: |
          echo "⚠️ Merge conflicts detected between master and stable"
          
          # Create a backup branch of current stable
          git checkout stable
          BACKUP_BRANCH="stable-backup-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BACKUP_BRANCH
          git push origin $BACKUP_BRANCH
          
          # Create a new branch for the force update
          FORCE_BRANCH="force-update-stable-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $FORCE_BRANCH origin/master
          git push origin $FORCE_BRANCH
          
          # Create PR with warning about conflicts
          gh pr create --base stable --head $FORCE_BRANCH \
            --title "⚠️ Force update stable branch from master" \
            --body "### ⚠️ Warning: Merge conflicts detected\n\nThis PR will force-update the stable branch to match master, overwriting any unique changes in stable.\n\nA backup of the current stable branch has been created as \`$BACKUP_BRANCH\`.\n\nPlease review carefully before merging."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Notification about conflicts
        if: steps.check-conflicts.outputs.has_conflicts == 'true'
        run: |
          echo "::notice::Merge conflicts detected. Created a PR with backup branch. Manual review required."