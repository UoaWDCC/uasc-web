# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy Client Staging
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  NEXT_PUBLIC_FIREBASE_API_KEY: ${{secrets.VITE_FIREBASE_API_KEY}}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secrets.VITE_FIREBASE_AUTH_DOMAIN}}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secrets.VITE_FIREBASE_PROJECT_ID}}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secrets.VITE_FIREBASE_STORAGE_BUCKET}}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.VITE_FIREBASE_MESSAGING_SENDER_ID}}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{secrets.VITE_FIREBASE_APP_ID}}
  NEXT_PUBLIC_BACKEND_BASE_URL: ${{secrets.VITE_BACKEND_BASE_URL}}
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{secrets.TEST_STRIPE_PK}}
  NEXT_PUBLIC_SANITY_PROJECT_ID: ${{secrets.PROD_SANITY_PROJECT_ID}}
  NEXT_PUBLIC_SANITY_DATASET: production
  NEXT_CONFIG_ENV: staging

jobs:
  setup:
    name: Setup
    needs: check_changes
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Run Setup Composite Action
        uses: ./.github/ci-actions/setup/

  build-and-deploy:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Enable Corepack
        shell: bash
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            server/node_modules
            client/node_modules
            node_modules
          key: node-modules-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm build --filter client

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_UASC_CEEBC }}"
          channelId: live
          projectId: uasc-ceebc
          entryPoint: client

  verify:
    name: Verify
    needs: [build-and-deploy]
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.build-and-deploy.result == 'success') }}
    steps:
      - name: All checks passed
        run: echo "All checks passed!"
